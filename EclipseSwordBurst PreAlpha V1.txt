pcall(function()
	repeat wait() until game.ReplicatedStorage:FindFirstChild("Profiles")
end)

local library = loadstring(game:HttpGet("https://pastebin.com/raw/z6iRKJJa", true))()
local HttpService = game:service("HttpService")

--File Save System:
local DefaultData = {
	["SwordBurst2"] = {
		["Loop Walk Speed"] = 20,
		["Jump Power"] = 50,
		["Infinite Stamina"] = false,
		["Infinite Jump"] = false,
		["Mod Detector"] = false,
		["Autofarm"] = false,
		["Max Mob Radius"] = 10000,
		["Mob Kill Aura"] = false,
		["Player Kill Aura"] = false,
		["Kill Aura Range"] = 40,
		["Kill Aura Speed"] = 20,
		["Auto Save Toggles"] = 40,
	},
}

--Init Files:
local IsDataFile = pcall(function()
	return readfile("EclipseHub/EclipseSB2.txt")
end)

if not isfolder("EclipseHub") then
	makefolder("EclipseHub")
	writefile("EclipseHub/EclipseSB2.txt", HttpService:JSONEncode(DefaultData))
elseif not IsDataFile then
	writefile("EclipseHub/EclipseSB2.txt", HttpService:JSONEncode(DefaultData))
end

--Decode File:
if IsDataFile then
	DefaultData = HttpService:JSONDecode(readfile("EclipseHub/EclipseSB2.txt"))
end

spawn(function()
	while wait(DefaultData["SwordBurst2"]["Auto Save Toggles"]) do
		pcall(function()
			writefile("EclipseHub/EclipseSB2.txt", HttpService:JSONEncode(DefaultData))
		end)
	end
end)

local Player = game.Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local UIS = game:GetService("UserInputService")
local PlayerProfile = game.ReplicatedStorage.Profiles[Player.Name]
local Database = game.ReplicatedStorage.Database
local Tp
local CombatModule
local MainModule
local SwordMethod = ""
local multipler = DefaultData["SwordBurst2"]["Kill Aura Speed"] -- range 1 to 20
local range = DefaultData["SwordBurst2"]["Kill Aura Range"] -- range 5 to 40
local AFrange = DefaultData["SwordBurst2"]["Max Mob Radius"] -- range 500 to 10000

local modList = {
	'AbstractAlex',
	'Blocky_Max',
	'SIevin',
	'Anticism',
	'OKevinO',
	'MisterGreenTurtle',
	'Reiko_Play',
	'MisterRedTurtle',
	'Hippie_ofDoom',
	'NightcoreRayRayw',
	'Wiseman_Matt',
	'RavenousZen',
	'CrypticArchr',
	'Alrkuo',
	'Dillytube',
	'NotSoAxser',
	'Glaciynical',
	'WickedNovaG1rl',
	'Centuryghost',
	'Zekrulix',
	'poopslim',
	'Skilluvi',
	'B1can',
	'Aquavsty',
	'RozukageMardarin',
	'SirMalRoyal',
	'NotSoV1RUS',
	'Direnias',
	'racerbee',
	'redvsty',
	'gravytr_ain',
	'UnitEternal',
	'entor',
	'Zaubergel',
	'Atritan7',
	'Insecure_FreakFurry',
	'rinvsty',
	'Brvdberry',
}

local FloorMobData = {
	
	[540240728] = { -- // Arcadia
		["Mobs"] = {
		}
	},
	
	[542351431] = { -- // Floor 1
		["Mobs"] = {
			["Frenzy Boar"] = true,
			["Hermit Crab"] = true,
			["Wolf"] = true,
			["Bear"] = true,
			["Dire Wolf"] = true,
			["Ruin Knight"] = true,
			["Draconite"] = true,
			["Ruin Kobold Knight"] = true,
			["Rahjin the Thief King"] = true,
		}
	},
	
	[737272595] = { -- // Battle Arena
		["Mobs"] = {
		}
	},

	[548231754] = { -- // Floor 2
		["Mobs"] = {
			["Leaf Beetle"] = true,
			["Leaf Ogre"] = true,
			["Leafray"] = true,
			["Pearl Keeper"] = true,
			["Pearl Guardian"] = true,
			["Gorrock the Grove Protector"] = true,
			["Wasp"] = true,
			["Bushback Tortoise"] = true,
			["Borik the BeeKeeper"] = true,
		}
	},

	[555980327] = { -- // Floor 3
		["Mobs"] = {
			["Snowgre"] = true,
			["Angry Snowman"] = true,
			["Icewhal"] = true,
			["Alpha Icewhal"] = true,
			["Snowhorse"] = true,
			["Ice Elemental"] = true,
			["Ice Walker"] = true,
			["Qerach The Forgotten Golem"] = true,
			["Ra'thae the Ice King"] = true,
		}
	},

	[572487908] = { -- // Floor 4
		["Mobs"] = {
			["Wattlechin Crocodile"] = true,
			["Birchman"] = true,
			["Treeray"] = true,
			["Bamboo Spiderling"] = true,
			["Rotling"] = true,
			["Boneling"] = true,
			["Dungeon Dweller"] = true,
			["Bamboo Spider"] = true,
			["Lion Protector"] = true,
			["Irath the Lion"] = true,
		}
	},

	[580239979] = { -- // Floor 5
		["Mobs"] = {
			["Girdled lizard"] = true,
			["Angry Cactus"] = true,
			["Desert Vulture"] = true,
			["Giant Centipede"] = true,
			["Sand Scorpion"] = true,
			["Fire Scorpion"] = true,
			["Green Patrolman"] = true,
			["Patrolman Elite"] = true,
			["Centaurian Defender"] = true,
			["Sa'jun the Centurian Chieftain"] = true,
		}
	},
	
	[566212942] = { -- // Helmfirth
		["Mobs"] = {
		}
	},

	[582198062] = { -- // Floor 7
		["Mobs"] = {
			["Jelly Wisp"] = true,
			["Firefly"] = true,
			["Shroom Back Clam"] = true,
			["Gloom Shroom"] = true,
			["Horned Sailfin Iguana"] = true,
			["Frogazoid"] = true,
			["Blightmouth."] = true,
			["Snapper"] = true,
			["Smashroom"] = true,
		}
	},

	[548878321] = { -- // Floor 8
		["Mobs"] = {
			["Giant Praying Mantis"] = true,
			["Petal Knight"] = true,
			["Leaf Rhino"] = true,
			["Sky Raven"] = true,
			["Hippogriff"] = true,
			["Forest Wanderer"] = true,
			["Wingless Hippogriff"] = true,
			["Dungeon Crusador"] = true,
			["Formaug the Jungle Giant"] = true,
		}
	},

	[573267292] = { -- // Floor 9
		["Mobs"] = {
			["Batting Eye"] = true,
			["Lingerer"] = true,
			["Fishrock Spider"] = true,
			["Reptasaurus"] = true,
			["Ent"] = true,
			["Undead Warrior"] = true,
			["Polyserpant"] = true,
			["Gargoyle Reaper"] = true,
			["Enraged Lingerer"] = true,
			["Undead Berserker"] = true,
			["Mortis the Flaming Sear"] = true,
		}
	},

	[2659143505] = { -- // Floor 10
		["Mobs"] = {
			["Minion"] = true,
			["Winged Minion"] = true,
			["Grunt"] = true,
			["Guard Hound"] = true,
			["Shady Villager"] = true,
			["Baal, The Tormentor"] = true,
			["Wendigo"] = true,
			["Clay Giant"] = true,
			["Undead Servant"] = true,
			["Grim  the  Overseer"] = true,
		}
	},

	[5287433115] = { -- // Floor 11
		["Mobs"] = {
			["Reaper"] = true,
			["Soul Eater"] = true,
			["Command Falcon"] = true,
			["Shadow Figure"] = true,
			["???????"] = true,
			["Ra"] = true,
			["Ka"] = true,
			["Da"] = true,
		}
	},

}

local BossData = {
	[542351431] = { -- // Floor 1
		"Rahjin the Thief King",
	},

	[548231754] = { -- // Floor 2
		"Borik the BeeKeeper",
	},

	[555980327] = { -- // Floor 3
		"Ra'thae the Ice King",
	},

	[572487908] = { -- // Floor 4
		"Irath the Lion",
	},

	[580239979] = { -- // Floor 5
		"Sa'jun the Centurian Chieftain",
	},

	[582198062] = { -- // Floor 7
		"Smashroom",
	},

	[548878321] = { -- // Floor 8
		"Formaug the Jungle Giant",
	},

	[573267292] = { -- // Floor 9
		"Mortis the Flaming Sear",
	},

	[2659143505] = { -- // Floor 10
		"Grim  the  Overseer",
	},

	[5287433115] = { -- // Floor 11
		"Ra",
		"Ka",
		"Da",
	},
}

--Set ups:
local SkillToUse
local scriptequip = false
function setupenvironment()
	scriptequip = true
	local ItemDB = game.ReplicatedStorage.Database.Items
	local level = math.floor(PlayerProfile.Stats.Exp.Value ^ 0.3333333333333333)
	local Katana
	local right
	local left
	for i, v in pairs(PlayerProfile.Inventory:GetChildren()) do
		if ItemDB[v.Name]:FindFirstChild("Class") and (ItemDB[v.Name].Class.Value == "Katana" or ItemDB[v.Name].Class.Value == "1HSword") and ItemDB[v.Name].Level.Value <= level then
			Katana = v
		end
		if v.Value == PlayerProfile.Equip.Right.Value then
			right = v
		end
		if v.Value == PlayerProfile.Equip.Left.Value then
			left = v
		end
	end
	if Katana == nil then
		Player:Kick("Unable to find an equippable Katana or 1HSword in your inventory.")
	end
	if right then
		game.ReplicatedStorage.Function:InvokeServer("Equipment", {"Unequip", right})
	end
	if left then
		game.ReplicatedStorage.Function:InvokeServer("Equipment", {"Unequip", left})
	end
	game.ReplicatedStorage.Function:InvokeServer("Equipment", {"EquipWeapon", Katana, "Right"})
	SkillToUse = ItemDB[Katana.Name].Class.Value == "Katana" and "Leaping Slash" or "Sweeping Strike"
	game.ReplicatedStorage.Event:FireServer("Skills", {"UseSkill", SkillToUse, nil})
	if right then
		wait(0.35)
		game.ReplicatedStorage.Function:InvokeServer("Equipment", {"Unequip", Katana})
		game.ReplicatedStorage.Function:InvokeServer("Equipment", {"EquipWeapon", right, "Right"})
		if left then
			game.ReplicatedStorage.Function:InvokeServer("Equipment", {"EquipWeapon", left, "Left"})
		end
	end
	scriptequip = false
end
setupenvironment()

--Auto Change Detection:
PlayerProfile.Equip.Left.Changed:connect(function()
	if not scriptequip then
		setupenvironment()
	end
end)
PlayerProfile.Equip.Right.Changed:connect(function()
	if not scriptequip then
		setupenvironment()
	end
end)

function GetCombatModule()
	for i, v in pairs(debug.getregistry()) do
		if typeof(v) == "table" and v.DamageArea then
			CombatModule = v
			break
		end
	end
end

GetCombatModule()

if not CombatModule then
	repeat wait(1)
		GetCombatModule()
	until CombatModule
end

for i,v in pairs(getnilinstances()) do
	if v:IsA("ModuleScript") and v.Name == "MainModule" then
		MainModule = require(v)
	end
end

local RPCKey = getupvalues(CombatModule.Init)[2]

--Player Section:
local EclipseP = library:CreateWindow("Player")
local Ws = DefaultData["SwordBurst2"]["Loop Walk Speed"]
local Jp = DefaultData["SwordBurst2"]["Jump Power"]

EclipseP:AddSlider({text = " Loop Walk Speed", value = Ws, min = 20, max = 70, float = 1, callback = function(x)
	Ws = x
	DefaultData["SwordBurst2"]["Loop Walk Speed"] = x
end})

EclipseP:AddSlider({text = " Jump Power", value = Jp, min = 50, max = 100, float = 1, callback = function(x)
	Player.Character.Humanoid.JumpPower = x
	Jp = x
	DefaultData["SwordBurst2"]["Jump Power"] = x
end})

Player.CharacterAdded:connect(function()
	repeat wait() until Player.Character:FindFirstChild("Humanoid")
	Player.Character.Humanoid.JumpPower = Jp
end)

spawn(function()
	while wait() do
		if Player.Character:FindFirstChild("Humanoid") then
			Player.Character.Humanoid.WalkSpeed = Ws
		end
	end
end)

local InfStamOn = false
local InfStamTog = EclipseP:AddToggle({text = "Infinite Stamina", state = DefaultData["SwordBurst2"]["Infinite Stamina"], callback = function(On)
	if On then
		InfStamOn = true
		DefaultData["SwordBurst2"]["Infinite Stamina"] = true
	elseif not On then
		InfStamOn = false
		DefaultData["SwordBurst2"]["Infinite Stamina"] = false
	end
end})

game:GetService("RunService").Heartbeat:connect(function()
	if Player.Character and InfStamOn then
		Player.Character:WaitForChild("Entity").Stamina.Value = 100
	end
end)

local InfJumpTog = EclipseP:AddToggle({text = "Infinite Jump", state = DefaultData["SwordBurst2"]["Infinite Jump"], callback = function(On)
	if On then
		DefaultData["SwordBurst2"]["Infinite Jump"] = true
		spawn(function()
			InfJump = UIS.JumpRequest:connect(function()
				Player.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
			end)
		end)
	elseif not On then
		InfJump:Disconnect()
		DefaultData["SwordBurst2"]["Infinite Jump"] = false
	end
end})

local AlreadyInvis = false
function Invis()
	if not AlreadyInvis then
		local BindWarnFunc = Instance.new("BindableFunction")
		BindWarnFunc.OnInvoke = function(text)
			if text == "Yes" then
				AlreadyInvis = true
				local Clone = Player.Character.LowerTorso.Root:Clone()
				Player.Character.LowerTorso.Root:Destroy()
				Clone.Parent = Player.Character.LowerTorso
				game.StarterGui:SetCore("SendNotification", {
					Title = "Invisibility Enabled",
					Text = "Reset/Die to stop invisibility.",
					Duration = 5,
				})
			else
				AlreadyInvis = false
				return
			end
		end
		game.StarterGui:SetCore("SendNotification", {
			Title = "Warning:";
			Text = "Is Your Character Hidden?";
			Icon = "rbxthumb://type=Asset&id=1764960415&w=150&h=150",
			Callback = BindWarnFunc;
			Button1 = "Yes";
			Button2 = "No";
		})
	end
end

Player.CharacterAdded:connect(function()
	if AlreadyInvis then
		AlreadyInvis = false
	end
end)

EclipseP:AddButton({text = "Invisibility", callback = function()
	if not AlreadyInvis then
		Invis()
	else
		game.StarterGui:SetCore("SendNotification", {
			Title = "Warnining:",
			Text = "Invisibility is already enabled.",
			Icon = "rbxthumb://type=Asset&id=1764960415&w=150&h=150",
			Duration = 5,
		})
	end
end})

local AutoKick = false
local ModDetTog = EclipseP:AddToggle({text = "Mod Detector", state = DefaultData["SwordBurst2"]["Mod Detector"], callback = function(On)
	if On then
		AutoKick = true
		for i,v in pairs(game.Players:GetChildren()) do
			for i2,v2 in pairs(modList) do
				if v2:lower() == v.Name:lower() then
					Player:Kick("Mod Detected: "..v.Name)
				end
			end
		end
		DefaultData["SwordBurst2"]["Mod Detector"] = true
	elseif not On then
		AutoKick = false
		DefaultData["SwordBurst2"]["Mod Detector"] = false
	end
end})

game.Players.PlayerAdded:connect(function(plr)
	for i,v in pairs(modList) do
		if v:lower() == plr.Name:lower() and AutoKick then
			Player:Kick("Mod Detected: "..plr.Name)
		end
	end
end)
--[[
local EclipsePT = EclipseP:AddFolder("Floor Teleport")

local FloorChosen
local JoinLowestToggle = false
local FloorsData = {
	"Arcadia",
	"Virhst Woodlands",
	"Battle Arena",
	"Redveil Grove",
	"Hidden Wilds",
	"Desolate Dunes",
	"Helmfirth",
	"Entoloma Gloomlands",
	"Blooming Plateau",
	"Va' Rok",
	"Transylvania",
	"Hypersiddia",
}



EclipsePT:AddList({text = "Location", values = FloorsData, callback = function(location)
	FloorChosen = location
end})

EclipsePT:AddToggle({text = "Join Smallest Server", callback = function(On)
	if On then
		JoinLowestToggle = true
	elseif not On then
		JoinLowestToggle = false
	end
end})]]

--Auto Farm Section:
local EclipseMain = library:CreateWindow("Autofarm")
local AutoFarmToggle = false
local AutoFarmingDB = false
local MobKillAuraToggle = false
local PKAuraToggle = false

local AutoFarmTog = EclipseMain:AddToggle({text = "Autofarm", state = DefaultData["SwordBurst2"]["Autofarm"], callback = function(On)
	if On then
		AutoFarmToggle = true
		DefaultData["SwordBurst2"]["Autofarm"] = true
		--Gen Invis Part: (camera stabilizer)
		local InvisPartAF = Instance.new("Part", game.Workspace)
		InvisPartAF.Size = Vector3.new(6, 1, 6)
		InvisPartAF.Anchored = true
		InvisPartAF.Transparency = 1
		InvisPartAF.Name = "InvisPartAF"
		InvisPartAF.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.5, 0)
	elseif not On then
		AutoFarmToggle = false
		AutoFarmingDB = false
		if game.Workspace:FindFirstChild("InvisPartAF") then
			game.Workspace.InvisPartAF:Destroy()
		end
		DefaultData["SwordBurst2"]["Autofarm"] = false
	end
end})

EclipseMain:AddSlider({text = " Max Mob Radius", value = AFrange, min = 500, max = 10000, float = 1, callback = function(x)
	AFrange = x
	DefaultData["SwordBurst2"]["Max Mob Radius"] = x
end})

local EclipseMobP = EclipseMain:AddFolder("Mob Prioritize")
local MobToggleBtn = {}

EclipseMobP:AddButton({text = "Select All", callback = function()
	for i,v in pairs(MobToggleBtn) do
		v:SetState(true)
	end
end})

EclipseMobP:AddButton({text = "Deselect All", callback = function()
	for i,v in pairs(MobToggleBtn) do
		v:SetState(false)
	end
end})

EclipseMobP:AddButton({text = "Select Boss", callback = function()
	for _,x in pairs(BossData[game.PlaceId]) do
		for i,v in pairs(MobToggleBtn) do
			for i2,v2 in pairs(v) do
				if i2 == "flag" and v2 == x then
					v:SetState(true)
				end
			end
		end
	end
end})

for i,v in pairs(FloorMobData[game.PlaceId]["Mobs"]) do
	local Btn = EclipseMobP:AddToggle({text = i, state = FloorMobData[game.PlaceId]["Mobs"][i], callback = function(On)
		if On then
			FloorMobData[game.PlaceId]["Mobs"][i] = true
		elseif not On then
			FloorMobData[game.PlaceId]["Mobs"][i] = false
		end
	end})
	table.insert(MobToggleBtn, Btn)
end

local MKillAuraTog = EclipseMain:AddToggle({text = "Mob Kill Aura", state = DefaultData["SwordBurst2"]["Mob Kill Aura"], callback = function(On)
	if On then
		MobKillAuraToggle = true
		DefaultData["SwordBurst2"]["Mob Kill Aura"] = true
	elseif not On then
		MobKillAuraToggle = false
		DefaultData["SwordBurst2"]["Mob Kill Aura"] = false
	end
end})

local PKillAuraTog = EclipseMain:AddToggle({text = "Player Kill Aura", state = DefaultData["SwordBurst2"]["Player Kill Aura"], callback = function(On)
	if On then
		PKAuraToggle = true
		DefaultData["SwordBurst2"]["Player Kill Aura"] = true
	elseif not On then
		PKAuraToggle = false
		DefaultData["SwordBurst2"]["Player Kill Aura"] = false
	end
end})

EclipseMain:AddSlider({text = " Kill Aura Range", value = range, min = 1, max = 40, float = 1, callback = function(x)
	range = x
	DefaultData["SwordBurst2"]["Kill Aura Range"] = x
end})

EclipseMain:AddSlider({text = " Kill Aura Speed", value = multipler, min = 1, max = 20, float = 1, callback = function(x)
	multipler = x
	DefaultData["SwordBurst2"]["Kill Aura Speed"] = x
end})

EclipseMain:AddLabel({text = "Vel Earned: 0"})
EclipseMain:AddLabel({text = "Exp Earned: 0"})

function IsAlive(mob)
	local alive = false
	if mob ~= nil and mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Entity") and mob.Entity:FindFirstChild("Health") and mob.Entity:FindFirstChild("Health").Value > 0 then
		if mob.Name ~= "Reaper" and mob:FindFirstChild("Head") and mob.Head.Transparency ~= 0 then
			alive = false
		elseif mob.Name == "Reaper" and mob:FindFirstChild("Reaper hands") and mob["Reaper hands"].Transparency ~= 0 then
			alive = false
		else
			alive = true
		end
	end
	return alive
end

function IsPlayerAlive()
	local alive = false
	if Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") and Player.Character:FindFirstChild("Entity") and Player.Character:FindFirstChild("Entity").Health.Value > 0 then
		alive = true
	end
	return alive
end

function Damage(mob)
	if IsAlive(mob) and IsPlayerAlive() then
		local mag = (Player.Character.HumanoidRootPart.Position - mob.HumanoidRootPart.Position).magnitude
		if mag <= range then
			for i = 1, multipler do
				spawn(function()
					game.ReplicatedStorage.Event:FireServer("Combat", RPCKey, {"Attack", SkillToUse, 1, mob})
				end)
			end
			wait()
		end
	end
end

function GetClosestMob(r, IsKillAura)
	local TargetDistance = r
	local Target
	if not IsKillAura then
		for i,v in pairs(game.Workspace.Mobs:GetChildren()) do
			if IsAlive(v) and IsPlayerAlive() and FloorMobData[game.PlaceId]["Mobs"][v.Name] then
				local mag = (Player.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
				if mag < TargetDistance then
					TargetDistance = mag
					Target = v
				end
			end
		end
	else
		for i,v in pairs(game.Workspace.Mobs:GetChildren()) do
			if IsAlive(v) and IsPlayerAlive() then
				local mag = (Player.Character.HumanoidRootPart.Position - v.HumanoidRootPart.Position).magnitude
				if mag < TargetDistance then
					TargetDistance = mag
					Target = v
				end
			end
		end
	end
	return Target
end

function tp(target, offset)
	if offset == nil then
		offset = CFrame.new(0,0,0)
	end
	if (Player.Character.HumanoidRootPart.Position - target.Position).magnitude > 8 then
		local tween = TweenInfo.new(
			(Player.Character.HumanoidRootPart.CFrame.p - target.CFrame.p).Magnitude / 100,
			Enum.EasingStyle.Sine,
			Enum.EasingDirection.InOut,
			0,
			false,
			0
		)
		Tp = TweenService:Create(Player.Character.HumanoidRootPart, tween, {CFrame = target.CFrame * offset})
		Tp:Play()
		Tp.Completed:wait()
	else
		Player.Character.HumanoidRootPart.CFrame = target.CFrame * offset
	end
end

spawn(function()
	while game:GetService("RunService").Heartbeat:Wait() do
		pcall(function()
			if AutoFarmToggle then
				if not AutoFarmingDB then
					AutoFarmingDB = true
					local ClosestMob = GetClosestMob(AFrange, false)
					if ClosestMob ~= nil and ClosestMob.PrimaryPart ~= nil then
						repeat
							tp(ClosestMob.HumanoidRootPart, CFrame.new(0, 25, 0))
							game.Workspace.InvisPartAF.CFrame = Player.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.5, 0)
							Damage(ClosestMob)
							game:GetService("RunService").Heartbeat:Wait()
						until not IsAlive(ClosestMob) or IsPlayerAlive() or ClosestMob == nil or not ClosestMob.PrimaryPart or not AutoFarmToggle
					end
					AutoFarmingDB = false
				end
			end
		end)
	end
end)

spawn(function()
	while game:GetService("RunService").Heartbeat:Wait() do
		pcall(function()
			if MobKillAuraToggle and not AutoFarmToggle then
				local ClosestMob = GetClosestMob(range, true)
				if ClosestMob ~= nil and ClosestMob.PrimaryPart ~= nil then
					Damage(ClosestMob)
				end
			end
		end)
	end
end)

spawn(function()
	while game:GetService("RunService").Heartbeat:Wait() do
		pcall(function()
			if PKAuraToggle and not AutoFarmToggle then
				for i,v in pairs(game.Players:GetChildren()) do
					if v.Name ~= Player.Name and IsAlive(v.Character) and IsPlayerAlive() then
						Damage(v.Character)
					end
				end
			end
		end)
	end
end)

--Misc Section:
local EclipseMisc = library:CreateWindow("Misc")
local EclipseMiscM = EclipseMisc:AddFolder("Open Menus")

EclipseMiscM:AddButton({text = "Open Crystal Forge Menu", callback = function()
	MainModule.Services.UI.openCrystalForge()
end})

EclipseMiscM:AddButton({text = "Open Dismantle Menu", callback = function()
	MainModule.Services.UI.openDismantle()
end})

EclipseMiscM:AddButton({text = "Open Upgrade Menu", callback = function()
	MainModule.Services.UI.openUpgrade()
end})

local EclipseMiscD = EclipseMisc:AddFolder("Auto Dismantles")

EclipseMiscD:AddButton({text = "Dismantle all commons", callback = function()
	local BindWarnFunc = Instance.new("BindableFunction")
	BindWarnFunc.OnInvoke = function(text)
		if text == "Yes" then
			for i,v in pairs(game.ReplicatedStorage.Profiles[Player.Name].Inventory:GetChildren()) do
				if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == "Common" then
					game.ReplicatedStorage.Event:FireServer("Equipment", {"Dismantle", v})
				end
			end
		else
			return
		end
	end
	game.StarterGui:SetCore("SendNotification", {
		Title = "Warning:";
		Text = "Are you sure?";
		Icon = "rbxthumb://type=Asset&id=1764960415&w=150&h=150",
		Callback = BindWarnFunc;
		Button1 = "Yes";
		Button2 = "No";
	})
end})

EclipseMiscD:AddButton({text = "Dismantle all uncommons", callback = function()
	local BindWarnFunc = Instance.new("BindableFunction")
	BindWarnFunc.OnInvoke = function(text)
		if text == "Yes" then
			for i,v in pairs(game.ReplicatedStorage.Profiles[Player.Name].Inventory:GetChildren()) do
				if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == "Uncommon" then
					game.ReplicatedStorage.Event:FireServer("Equipment", {"Dismantle", v})
				end
			end
		else
			return
		end
	end
	game.StarterGui:SetCore("SendNotification", {
		Title = "Warning:";
		Text = "Are you sure?";
		Icon = "rbxthumb://type=Asset&id=1764960415&w=150&h=150",
		Callback = BindWarnFunc;
		Button1 = "Yes";
		Button2 = "No";
	})
end})

EclipseMiscD:AddButton({text = "Dismantle all rares", callback = function()
	local BindWarnFunc = Instance.new("BindableFunction")
	BindWarnFunc.OnInvoke = function(text)
		if text == "Yes" then
			for i,v in pairs(game.ReplicatedStorage.Profiles[Player.Name].Inventory:GetChildren()) do
				if game.ReplicatedStorage.Database.Items[v.Name].Rarity.Value == "Rare" then
					game.ReplicatedStorage.Event:FireServer("Equipment", {"Dismantle", v})
				end
			end
		else
			return
		end
	end
	game.StarterGui:SetCore("SendNotification", {
		Title = "Warning:";
		Text = "Are you sure?";
		Icon = "rbxthumb://type=Asset&id=1764960415&w=150&h=150",
		Callback = BindWarnFunc;
		Button1 = "Yes";
		Button2 = "No";
	})
end})

local EclipseU = EclipseMisc:AddFolder("Auto Upgrades")
--Weapons:
local AUWeaponToggle = false
local EquippedWep = nil
local MaxUpgradeValWep = 0
--Armors:
local AUArmorToggle = false
local EquippedArm = nil
local MaxUpgradeValArm = 0

EclipseU:AddToggle({text = "Equipped Weapon", callback = function(On)
	if On then
		AUWeaponToggle = true
		local Rarity
		for i,v in pairs(game.ReplicatedStorage.Profiles[Player.Name].Inventory:GetChildren()) do
			if tonumber(v.Value) == tonumber(game.ReplicatedStorage.Profiles[Player.Name].Equip.Right.Value) then
				EquippedWep = v
				break
			end
		end
		Rarity = game.ReplicatedStorage.Database.Items[EquippedWep.Name].Rarity.Value
		if Rarity == "Common" then
			MaxUpgradeValWep = 10
		elseif Rarity == "Uncommon" then
			MaxUpgradeValWep = 10
		elseif Rarity == "Rare" then
			MaxUpgradeValWep = 15
		elseif Rarity == "Legendary" then
			MaxUpgradeValWep = 20
		end
	elseif not On then
		AUWeaponToggle = false
		EquippedWep = nil
	end
end})

EclipseU:AddToggle({text = "Equipped Armor", callback = function(On)
	if On then
		AUArmorToggle = true
		local Rarity
		for i,v in pairs(game.ReplicatedStorage.Profiles[Player.Name].Inventory:GetChildren()) do
			if tonumber(v.Value) == tonumber(game.ReplicatedStorage.Profiles[Player.Name].Equip.Clothing.Value) then
				EquippedArm = v
				break
			end
		end
		Rarity = game.ReplicatedStorage.Database.Items[EquippedArm.Name].Rarity.Value
		if Rarity == "Common" then
			MaxUpgradeValArm = 10
		elseif Rarity == "Uncommon" then
			MaxUpgradeValArm = 10
		elseif Rarity == "Rare" then
			MaxUpgradeValArm = 15
		elseif Rarity == "Legendary" then
			MaxUpgradeValArm = 20
		end
	elseif not On then
		AUArmorToggle = false
		EquippedArm = nil
	end
end})

spawn(function()
	while wait(0.1) do
		pcall(function()
			if AUWeaponToggle and EquippedWep and EquippedWep:FindFirstChild("Upgrade").Value ~= MaxUpgradeValWep then
				game.ReplicatedStorage.Event:FireServer("Equipment", {"Upgrade", EquippedWep, false})
			end
			if AUArmorToggle and EquippedArm and EquippedArm:FindFirstChild("Upgrade").Value ~= MaxUpgradeValArm then
				game.ReplicatedStorage.Event:FireServer("Equipment", {"Upgrade", EquippedArm, false})
			end
		end)
	end
end)

--Anti Afk:
local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
	vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
	vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

--Settings Page:
local EclipseS = library:CreateWindow("Settings")
local AutoSaveTime = DefaultData["SwordBurst2"]["Auto Save Toggles"]

EclipseS:AddBind({text = "Toggle UI", key = Enum.KeyCode.RightShift, callback = function()
	library:Close()
end})

EclipseS:AddSlider({text = " Auto Save Toggles", value = AutoSaveTime, min = 20, max = 40, float = 1, callback = function(x)
	AutoSaveTime = x
	DefaultData["SwordBurst2"]["Auto Save Toggles"] = x
end})

local VerifyDelete = false
local DestroyBtn
local CountDown = 5

EclipseS:AddButton({text = "Destroy GUI", callback = function()
	if not VerifyDelete then
		spawn(function()
			VerifyDelete = true
			DestroyBtn.Text = "Are You Sure? (" .. CountDown .. ")"
			repeat wait(1)
				CountDown = CountDown - 1
				DestroyBtn.Text = "Are You Sure? (" .. CountDown .. ")"
			until CountDown == 0
			VerifyDelete = false
			DestroyBtn.Text = "Destroy GUI"
			CountDown = 5
		end)
	end
	if VerifyDelete then
		game.CoreGui.ScreenGui:Destroy()
	end
end})

EclipseS:AddLabel({text = "Credits: Doggo#0931"})

library:Init()

--Handle Counters:
local VelText
local ExpText
local LastVel = game.ReplicatedStorage.Profiles[Player.Name].Stats.Vel.Value
local LastExp = game.ReplicatedStorage.Profiles[Player.Name].Stats.Exp.Value
local veldata = 0
local expdata = 0

for i,v in pairs(game.CoreGui.ScreenGui:GetDescendants()) do
	if v:IsA("TextLabel") and v.Text == " Vel Earned: 0" then
		VelText = v
	end
	if v:IsA("TextLabel") and v.Text == " Exp Earned: 0" then
		ExpText = v
	end
	if v:IsA("TextLabel") and v.Text == " Credits: Doggo#0931" then
		v.TextXAlignment = "Center"
	end
	if v:IsA("TextLabel") and v.Text == " Destroy GUI" then
		DestroyBtn = v
	end
end

game.ReplicatedStorage.Profiles[Player.Name].Stats.Vel.Changed:connect(function()
	local earn = game.ReplicatedStorage.Profiles[Player.Name].Stats.Vel.Value - LastVel
	LastVel = game.ReplicatedStorage.Profiles[Player.Name].Stats.Vel.Value
	veldata = veldata + earn
	VelText.Text = " Vel Earned: "..tostring(veldata)
end)

game.ReplicatedStorage.Profiles[Player.Name].Stats.Exp.Changed:connect(function()
	local earn = game.ReplicatedStorage.Profiles[Player.Name].Stats.Exp.Value - LastExp
	LastExp = game.ReplicatedStorage.Profiles[Player.Name].Stats.Exp.Value
	expdata = expdata + earn
	ExpText.Text = " Exp Earned: "..tostring(expdata)
end)
